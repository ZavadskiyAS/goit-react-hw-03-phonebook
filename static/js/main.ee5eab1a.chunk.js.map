{"version":3,"sources":["components/section/Section.js","components/section/phoneBook/PhoneBook.js","components/section/contactsList/contactsItem/ContactsItem.js","components/section/contactsList/ContactsList.js","components/section/filterInput/FilterInput.js","components/ui/storage.js","components/App.js","index.js"],"names":["Section","title","children","PhoneBook","state","name","number","handleChange","e","setState","target","value","contactsVerification","props","contacts","some","contact","submitForm","preventDefault","alert","newContact","id","uuidv4","getContactInfo","this","onSubmit","type","placeholder","onChange","required","Component","ContactsItem","deleteContact","onClick","ContactsList","length","map","key","defaultProps","FilterInput","filter","filterInput","serializedState","localStorage","getItem","undefined","JSON","parse","err","console","error","stringify","setItem","App","prevState","contactsFilter","toLowerCase","includes","loadContacts","storage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ee5eab1a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst Section = ({ title, children }) => (\n  <section>\n    <h2>{title}</h2>\n    {children}\n  </section>\n);\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\nexport default Section;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\n\n\nclass PhoneBook extends Component {\n  state = { name: '', number: '' };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  contactsVerification = () => {\n    return this.props.contacts.some(\n      contact => contact.name === this.state.name,\n    );\n  };\n\n  submitForm = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    if (this.contactsVerification()) {\n      alert('!!!');\n    } else {\n      const newContact = { id: uuidv4(), name, number };\n      this.props.getContactInfo(newContact);\n      this.setState({ name: '', number: '' });\n    }\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form  onSubmit={this.submitForm}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            placeholder=\"Name...\"\n            value={name}\n            name=\"name\"\n            onChange={this.handleChange}\n            required\n          />\n        </label>\n        <label>\n          Number\n          <input\n            placeholder=\"38(___)___-__-__\"\n            type=\"tel\"\n            value={number}\n            name=\"number\"\n            onChange={this.handleChange}\n            required\n          />\n        </label>\n        <button type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nPhoneBook.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  getContactInfo: PropTypes.func.isRequired,\n};\n\nexport default PhoneBook;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst ContactsItem = ({ contact: { id, name, number }, deleteContact }) => (\n  <li>\n    <p>{name} : {number} \n    <button\n      type=\"button\"\n      id={id}\n      onClick={deleteContact}\n    >\n       X\n    </button> </p>\n  </li>\n);\nContactsItem.propTypes = {\n  contact: PropTypes.objectOf(PropTypes.string).isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\nexport default ContactsItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ContactsItem from './contactsItem/ContactsItem';\n\nconst ContactsList = ({ contacts, deleteContact }) => {\n  if (contacts.length) {\n    return (\n      <ul>\n        {contacts.map(contact => (\n          <ContactsItem\n            key={contact.id}\n            contact={contact}\n            deleteContact={deleteContact}\n          />\n        ))}\n      </ul>\n    );\n  }\n  return <h3>Contacts not found!</h3>;\n};\n\nContactsList.defaultProps = {\n  contacts: [],\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst FilterInput = ({ filter, filterInput }) => (\n  <div>\n    <label>\n      Find contacts by name\n      <input\n        type=\"text\"\n        placeholder=\"Add your search...\"\n        value={filter}\n        name=\"filter\"\n        onChange={filterInput}\n      />\n    </label>\n  </div>\n);\n\nFilterInput.propTypes = {\n  filter: PropTypes.string.isRequired,\n  filterInput: PropTypes.elementType.isRequired,\n};\n\nexport default FilterInput;\n","const load = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (err) {\n    return console.error('Get state error: ', err);\n  }\n};\n\nconst save = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (err) {\n    console.error('Set state error: ', err);\n  }\n};\n\nexport default { load, save };\n","import React, { Component } from 'react';\nimport Section from './section/Section';\nimport PhoneBook from './section/phoneBook/PhoneBook';\nimport ContactsList from './section/contactsList/ContactsList';\nimport FilterInput from './section/filterInput/FilterInput';\nimport storage from './ui/storage';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Gert Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const loadContacts = storage.load('contacts');\n    if (loadContacts) {\n      this.setState({ contacts: loadContacts });\n    }\n  }\n\n  componentDidUpdate() {\n    const { contacts } = this.state;\n    storage.save('contacts', contacts);\n  }\n\n  getContactInfo = newContact => {\n    this.setState(prevState => ({\n      contacts: [...prevState.contacts, newContact],\n    }));\n  };\n\n  filterInput = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  contactsFilter = () => {\n    if (this.state.contacts.length > 2) {\n      return this.state.contacts.filter(contact =>\n        contact.name.toLowerCase().includes(this.state.filter.toLowerCase()),\n      );\n    }\n    return this.state.contacts;\n  };\n\n  deleteContact = e => {\n    const { id } = e.target;\n    this.setState(prevState => ({\n      contacts: [...prevState.contacts.filter(contact => contact.id !== id)],\n    }));\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    return (\n      <>\n        <Section title=\"Phonebook\">\n          <PhoneBook getContactInfo={this.getContactInfo} contacts={contacts} />\n        </Section>\n        <Section title=\"Contacts\">\n          <FilterInput filter={filter} filterInput={this.filterInput} />\n          <ContactsList\n            contacts={this.contactsFilter()}\n            deleteContact={this.deleteContact}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}